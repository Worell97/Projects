unit ThreadAtualizaEnderecos;

interface

uses
  Classes, IdHTTP, DTO_Endereco, DAO_Endereco, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.PG,
  FireDAC.Phys.PGDef, FireDAC.ConsoleUI.Wait, Data.DB, FireDAC.Comp.Client,
  FireDAC.Comp.UI, SysUtils, DTO_Endereco_Integracao, DAO_Endereco_Integracao,
  REST.Json, JsonObjectIntegracao;

type
  TCepIntegracao = class(TThread)
  FDConnection: TFDConnection;
  private
   { Private declarations }
  protected
   procedure Execute; override;
end;

implementation

procedure TCepIntegracao.Execute;
var
  lHTTP: TIdHTTP;
  Response: string;
  LDtoEnderecos: TDtoEnderecos;
  LDaoEndereco: TDaoEndereco;
  Endereco: TDtoEndereco;
  Cep: System.String;
  LDaoEnderecoIntegracao: TDaoEnderecoIntegracao;
  LDtoEnderecoIntegracao: TDtoEnderecoIntegracao;
  JsonObject: TDtoJsonIntegracaoObject;
begin
  LDtoEnderecoIntegracao := TDtoEnderecoIntegracao.Create();
  LDaoEnderecoIntegracao := TDaoEnderecoIntegracao.Create(FDConnection);
  NameThreadForDebugging('Consulta Endereços');
  FDConnection := TFDConnection.Create(nil);
  FDConnection.DriverName := 'PG';
  FDConnection.Params.Database := 'WKTeste';
  FDConnection.Params.UserName := 'postgres';
  FDConnection.Params.Password := '123';
  LDtoEnderecos := TDtoEnderecos.Create;
  LDaoEndereco := TDaoEndereco.Create(FDConnection);
  lHTTP := TIdHTTP.Create;
  try
    LDaoEndereco.LoadAll(LDtoEnderecos);
    for Endereco in LDtoEnderecos do
    begin
      Cep := StringReplace(Endereco.dscep, '-', '', [rfReplaceAll]);
      Response := lHTTP.Get('HTTP://viacep.com.br/ws/'+Cep+'/json/');
      JsonObject := TJson.JsonToObject<TDtoJsonIntegracaoObject>(Response);
    end;
  finally
    lHTTP.Free;
    FDConnection.Free;
  end;
end;

end.
